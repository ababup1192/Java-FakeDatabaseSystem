<?xml version="1.0" encoding="UTF-8"?>
<project name="module_fakedatabasesystem" default="compile.module.fakedatabasesystem">
  <dirname property="module.fakedatabasesystem.basedir" file="${ant.file.module_fakedatabasesystem}"/>
  
  <property name="module.jdk.home.fakedatabasesystem" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.fakedatabasesystem" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.fakedatabasesystem" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.fakedatabasesystem" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="fakedatabasesystem.output.dir" value="${module.fakedatabasesystem.basedir}/out/production/FakeDatabaseSystem"/>
  <property name="fakedatabasesystem.testoutput.dir" value="${module.fakedatabasesystem.basedir}/out/test/FakeDatabaseSystem"/>
  
  <path id="fakedatabasesystem.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="fakedatabasesystem.module.production.classpath">
    <path refid="${module.jdk.classpath.fakedatabasesystem}"/>
  </path>
  
  <path id="fakedatabasesystem.runtime.production.module.classpath">
    <pathelement location="${fakedatabasesystem.output.dir}"/>
  </path>
  
  <path id="fakedatabasesystem.module.classpath">
    <path refid="${module.jdk.classpath.fakedatabasesystem}"/>
    <pathelement location="${fakedatabasesystem.output.dir}"/>
    <path refid="library.gradle:_junit-4.11.classpath"/>
    <path refid="library.gradle:_hamcrest-core-1.3.classpath"/>
  </path>
  
  <path id="fakedatabasesystem.runtime.module.classpath">
    <pathelement location="${fakedatabasesystem.testoutput.dir}"/>
    <pathelement location="${fakedatabasesystem.output.dir}"/>
    <path refid="library.gradle:_junit-4.11.classpath"/>
    <path refid="library.gradle:_hamcrest-core-1.3.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.fakedatabasesystem">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.fakedatabasesystem">
    <patternset refid="excluded.from.module.fakedatabasesystem"/>
  </patternset>
  
  <path id="fakedatabasesystem.module.sourcepath">
    <dirset dir="${module.fakedatabasesystem.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="fakedatabasesystem.module.test.sourcepath">
    <dirset dir="${module.fakedatabasesystem.basedir}">
      <include name="src/test/java"/>
      <include name="src/test/resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.fakedatabasesystem" depends="compile.module.fakedatabasesystem.production,compile.module.fakedatabasesystem.tests" description="Compile module FakeDatabaseSystem"/>
  
  <target name="compile.module.fakedatabasesystem.production" depends="register.custom.compilers" description="Compile module FakeDatabaseSystem; production classes">
    <mkdir dir="${fakedatabasesystem.output.dir}"/>
    <javac2 destdir="${fakedatabasesystem.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.fakedatabasesystem}/javac">
      <compilerarg line="${compiler.args.fakedatabasesystem}"/>
      <bootclasspath refid="fakedatabasesystem.module.bootclasspath"/>
      <classpath refid="fakedatabasesystem.module.production.classpath"/>
      <src refid="fakedatabasesystem.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.fakedatabasesystem"/>
    </javac2>
    
    <copy todir="${fakedatabasesystem.output.dir}">
      <fileset dir="${module.fakedatabasesystem.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.fakedatabasesystem.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.fakedatabasesystem.tests" depends="register.custom.compilers,compile.module.fakedatabasesystem.production" description="compile module FakeDatabaseSystem; test classes" unless="skip.tests">
    <mkdir dir="${fakedatabasesystem.testoutput.dir}"/>
    <javac2 destdir="${fakedatabasesystem.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.fakedatabasesystem}/javac">
      <compilerarg line="${compiler.args.fakedatabasesystem}"/>
      <bootclasspath refid="fakedatabasesystem.module.bootclasspath"/>
      <classpath refid="fakedatabasesystem.module.classpath"/>
      <src refid="fakedatabasesystem.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.fakedatabasesystem"/>
    </javac2>
    
    <copy todir="${fakedatabasesystem.testoutput.dir}">
      <fileset dir="${module.fakedatabasesystem.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.fakedatabasesystem.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.fakedatabasesystem" description="cleanup module">
    <delete dir="${fakedatabasesystem.output.dir}"/>
    <delete dir="${fakedatabasesystem.testoutput.dir}"/>
  </target>
</project>